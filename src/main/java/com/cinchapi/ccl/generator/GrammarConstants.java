/* Generated By:JJTree&JavaCC: Do not edit this line. GrammarConstants.java */
package com.cinchapi.ccl.generator;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int OPEN_PARENTHESES = 3;
  /** RegularExpression Id. */
  int CLOSE_PARENTHESES = 4;
  /** RegularExpression Id. */
  int TIMESTAMP = 5;
  /** RegularExpression Id. */
  int CONJ = 6;
  /** RegularExpression Id. */
  int CONJUNCTION = 7;
  /** RegularExpression Id. */
  int DISJUNCTION = 8;
  /** RegularExpression Id. */
  int UNARY_OPERATOR = 9;
  /** RegularExpression Id. */
  int BINARY_OPERATOR = 10;
  /** RegularExpression Id. */
  int EQUALS = 11;
  /** RegularExpression Id. */
  int NOT_EQUALS = 12;
  /** RegularExpression Id. */
  int GREATER_THAN = 13;
  /** RegularExpression Id. */
  int GREATER_THAN_OR_EQUALS = 14;
  /** RegularExpression Id. */
  int LESS_THAN = 15;
  /** RegularExpression Id. */
  int LESS_THAN_OR_EQUALS = 16;
  /** RegularExpression Id. */
  int LINKS_TO = 17;
  /** RegularExpression Id. */
  int REGEX = 18;
  /** RegularExpression Id. */
  int NOT_REGEX = 19;
  /** RegularExpression Id. */
  int LIKE = 20;
  /** RegularExpression Id. */
  int NOT_LIKE = 21;
  /** RegularExpression Id. */
  int BETWEEN = 22;
  /** RegularExpression Id. */
  int IDENTIFIER = 23;
  /** RegularExpression Id. */
  int SYMBOL = 24;
  /** RegularExpression Id. */
  int LETTER = 25;
  /** RegularExpression Id. */
  int DIGIT = 26;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"(\"",
    "\")\"",
    "<TIMESTAMP>",
    "<CONJ>",
    "<CONJUNCTION>",
    "<DISJUNCTION>",
    "<UNARY_OPERATOR>",
    "<BINARY_OPERATOR>",
    "<EQUALS>",
    "<NOT_EQUALS>",
    "<GREATER_THAN>",
    "<GREATER_THAN_OR_EQUALS>",
    "<LESS_THAN>",
    "<LESS_THAN_OR_EQUALS>",
    "<LINKS_TO>",
    "\"regex\"",
    "\"nregex\"",
    "\"like\"",
    "\"nlike\"",
    "<BETWEEN>",
    "<IDENTIFIER>",
    "\"$\"",
    "<LETTER>",
    "<DIGIT>",
    "\"\\n\"",
  };

}
