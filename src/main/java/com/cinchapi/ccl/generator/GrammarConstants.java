/* Generated By:JJTree&JavaCC: Do not edit this line. GrammarConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int OPEN_PARENTHESES = 7;
  /** RegularExpression Id. */
  int CLOSE_PARENTHESES = 8;
  /** RegularExpression Id. */
  int RESOLUTION = 9;
  /** RegularExpression Id. */
  int TIMESTAMP = 10;
  /** RegularExpression Id. */
  int CONJUNCTION = 11;
  /** RegularExpression Id. */
  int DISJUNCTION = 12;
  /** RegularExpression Id. */
  int OPERATOR = 13;
  /** RegularExpression Id. */
  int EQUALS = 14;
  /** RegularExpression Id. */
  int NOT_EQUALS = 15;
  /** RegularExpression Id. */
  int GREATER_THAN = 16;
  /** RegularExpression Id. */
  int GREATER_THAN_OR_EQUALS = 17;
  /** RegularExpression Id. */
  int LESS_THAN = 18;
  /** RegularExpression Id. */
  int LESS_THAN_OR_EQUALS = 19;
  /** RegularExpression Id. */
  int LINKS_TO = 20;
  /** RegularExpression Id. */
  int REGEX = 21;
  /** RegularExpression Id. */
  int NOT_REGEX = 22;
  /** RegularExpression Id. */
  int LIKE = 23;
  /** RegularExpression Id. */
  int NOT_LIKE = 24;
  /** RegularExpression Id. */
  int BETWEEN = 25;
  /** RegularExpression Id. */
  int IDENTIFIER = 26;
  /** RegularExpression Id. */
  int LETTER = 27;
  /** RegularExpression Id. */
  int DIGIT = 28;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"(\"",
    "\")\"",
    "\"$\"",
    "<TIMESTAMP>",
    "<CONJUNCTION>",
    "<DISJUNCTION>",
    "<OPERATOR>",
    "<EQUALS>",
    "<NOT_EQUALS>",
    "<GREATER_THAN>",
    "<GREATER_THAN_OR_EQUALS>",
    "<LESS_THAN>",
    "<LESS_THAN_OR_EQUALS>",
    "<LINKS_TO>",
    "\"regex\"",
    "\"nregex\"",
    "\"like\"",
    "\"nlike\"",
    "<BETWEEN>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\";\"",
  };

}
